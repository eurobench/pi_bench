%% set acquisition parameters, create handle classes and connect sensors

%Shimmer parameters

COMPORT = {'3','6','8','12','13','19'};
fsamp_sh = 128;

%NI parameters

fsamp_ni = 128;
ni_channels = [0:8 17:24];
devicename = 'Dev1';
range_ni = [-5,5];

%define Protocol: '5sts' or '30sts'

protocol = '30sts';

[sh,s] = connect_sensors(COMPORT, fsamp_sh, devicename, ni_channels, fsamp_ni, range_ni);


%% create listener
lh = addlistener(s,'DataAvailable',@(src,evt) addUserData(src,evt));
%% acquisition
[Chair_data_calib, Shimmer_data_calib] = synch_acq(sh,s);
[Synch_chair_data_calib, Synch_shimmer_data_calib, chair_labels, shimmer_labels] = synchronize_data(Chair_data_calib, Shimmer_data_calib, fsamp_sh);
[calibration_params, calibration_quality] = calibration(Synch_shimmer_data_calib(1:end-1));

%% perform standing acquisition

[Chair_data_standing, Shimmer_data_standing] = synch_acq(sh,s);
[Synch_chair_data_standing, Synch_shimmer_data_standing] = synchronize_data(Chair_data_standing, Shimmer_data_standing, fsamp_sh);


%% perform protocol acquisition

[Chair_data, Shimmer_data] = synch_acq(sh,s);
[Synch_chair_data, Synch_shimmer_data] = synchronize_data(Chair_data, Shimmer_data, fsamp_sh);

[Joint_angles, Joint_labels] = joint_kinematics(Synch_shimmer_data(1:end-1), calibration_params, fsamp_sh);

%% calculate metrics

%Performance Indicator PI1 depends on the chosen protocol

switch protocol
    
    case '5sts'
        
        duration_5sts = sts_duration_5sts(Synch_chair_data, Joint_angles, fsamp_sh);
        
    case '30sts'
        
        ncycles = repetitions_30sSTS(Joint_angles, fsamp_sh);
        
end

%PI2: sts subphases duration

[subphases,sts_points] = segment_sts(Synch_chair_data, Joint_angles, fsamp_sh);

%PI3: CoP stability

C

%PI4 and PI5: unidirectional load transfer time and overshoot

[ult_os,ult_time] = unidirectional_load_transfer(Synch_chair_data,Synch_chair_data_standing(:,15:16), sts_points, fsamp_sh);

%PI6: kinematic repeatability

        
        




